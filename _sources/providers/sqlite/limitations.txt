Ограничения SQLite
====================

Когда используется провайдер SQLite, есть целый ряд ограничений, о которых вы должны быть в курсе. Большинство из них являются результатом ограничений в основном движке базы данных SQLite и не являются специфическими для EF.

Ограничения моделирования
------------------------------------

Общая реляционная библиотека (распространяемая поставщиками реляционных баз данных Entity Framework) определяет API-интерфейсы для концепций моделирования, которые являются общими для большинства реляционных СУБД. Некоторые из этих концепций не поддерживается поставщиком SQLite.

* Схемы
* Последовательности

Ограничения миграций
------------------------------

Ядро СУБД SQLite не поддерживает ряд операций схемы, которые поддерживаются большинством других реляционных баз данных. Если вы попытаетесь применить одну из неподдерживаемых операций в базе данных SQLite, то будет выброшено ``NotSupportedException``.

.. |yes| unicode:: U+2714
.. |no| unicode:: U+2717

+-------------------------+------------+
| Операция                | Поддер-ся? |
+=========================+============+
| **AddColumn**           | |yes|      |
+-------------------------+------------+
| AddForeignKey           | |no|       |
+-------------------------+------------+
| AddPrimaryKey           | |no|       |
+-------------------------+------------+
| AddUniqueConstraint     | |no|       |
+-------------------------+------------+
| AlterColumn             | |no|       |
+-------------------------+------------+
| AlterSequence           | |no|       |
+-------------------------+------------+
| **CreateIndex**         | |yes|      |
+-------------------------+------------+
| CreateSchema            | |no|       |
+-------------------------+------------+
| CreateSequence          | |no|       |
+-------------------------+------------+
| **CreateTable**         | |yes|      |
+-------------------------+------------+
| DropColumn              | |no|       |
+-------------------------+------------+
| DropForiegnKey          | |no|       |
+-------------------------+------------+
| **DropIndex**           | |yes|      |
+-------------------------+------------+
| DropPrimaryKey          | |no|       |
+-------------------------+------------+
| DropSchema              | |no|       |
+-------------------------+------------+
| DropSequence            | |no|       |
+-------------------------+------------+
| **DropTable**           | |yes|      |
+-------------------------+------------+
| DropUniqueConstraint    | |no|       |
+-------------------------+------------+
| RenameColumn            | |no|       |
+-------------------------+------------+
| RenameIndex             | |no|       |
+-------------------------+------------+
| RenameSequence          | |no|       |
+-------------------------+------------+
| **RenameTable**         | |yes|      |
+-------------------------+------------+
| RestartSequence         | |no|       |
+-------------------------+------------+

.. tip::
  Вы можете обойти некоторые из этих ограничений написав код в миграции в ручную, чтобы заполнить таблицу восстановления. Таблица восстановления включает в себя переименование существующей таблицы, создание новой таблицы, копирование данных в новую таблицу, и удаление старой таблицы. Вам нужно будет использовать метод ``Sql (string)``, чтобы выполнить некоторые из этих шагов.

  Более подробно смотрите `Создание других видов схем изменения таблиц` в документации SQLite.

  В будущем OF может поддерживать некоторые из этих операций при помощи таблицы восстановления из под капота. Вы можете `отслеживать эту функцию на нашем проекте GitHub <https://github.com/aspnet/EntityFramework/issues/329>`_.
