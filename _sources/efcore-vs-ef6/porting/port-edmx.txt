Портирование модели, основанной на EDMX (Model First & Database First)
======================================================================

EF Core не поддерживает для моделей формат файла EDMX. Самый лучший вариант для портирования таких моделей это генерирование новой модели, основанной на коде из базы данных вашего приложения.

.. contents:: `В этой статье:`
    :depth: 2
    :local:

Установка пакетов EF Core NuGet
-------------------------------

Установите NuGet пакет ``Microsoft.EntityFrameworkCore.Tools``.

Вам также нужно установить NuGet **design time** пакет того провайдера базы данных, которого вы хотите использовать. Обычно это имя пакета среды выполнения провайдера базы данных с суффиксом ``.Design``. Например, когда выбран SQL Server, вы должны установить ``Microsoft.EntityFrameworkCore.SqlServer.Design``. Подробнее смотрите раздел :doc:`/providers/index`.

Восстановление модели
---------------------

Теперь вы можете использовать функционал обратного инжиниринга для создания модели на основе существующей базы данных.

В консоли Package Manager выполните следующую команду (:menuselection:`Tools –> NuGet Package Manager –> Package Manager Console`). Параметры команды для скаффолдинга набора таблиц и т.п., смотрите раздел :doc:`/miscellaneous/cli/powershell`.

.. code-block:: text
    :linenos:

    Scaffold-DbContext "<connection string>" <database provider name>

Например, вот команда для скаффолдинга модели из базы данных Blogging экземпляра SQL Server LocalDB.

.. code-block:: text
    :linenos:

    Scaffold-DbContext "Server=(localdb)\mssqllocaldb;Database=Blogging;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer

Удаление модели EF6.x
---------------------

Теперь вам нужно удалить модель EF6.x из своего приложения.

Лучше оставить NuGet пакет EF6.x (EntityFramework) установленным, так как EF Core и EF6.x могут использоваться бок-о-бок в одном приложении. Тем не менее, если вы не намерены использовать EF6.x ни в каких областях вашего приложения, то удаление пакета поможет выявить ошибки компиляции в фрагментах кода, которые требуют внимания.

Обновление кода
---------------

На данный момент вы столкнетесь с вопросом решения ошибок компиляции и анализа кода, чтобы увидеть, есть ли изменения в поведении между EF6.x и EF Core.

Тестирование портирования
-------------------------

Даже если ваше приложение собирается, это не означает, что оно успешно портировано на EF Core. Вам нужно будет проверить все области вашего приложения, чтобы убедиться, что ни одно из изменений в поведении не воздействует негативно на ваше приложение.
