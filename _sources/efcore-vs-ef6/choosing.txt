Что из этого больше подходит для вас
====================================

Следующая информация поможет вам выбрать между Entity Framework Core и Entity Framework 6.x.

.. contents:: `В этой статье:`
    :depth: 2
    :local:

Что такое EF6.x
---------------

Entity Framework 6.x (EF6.x) это опробованная и протестированная технология доступа к данным с многолетними фичами и стабилизацией. Ее первый релиз состоялся в 2008, как часть .NET Framework 3.5 SP1 и Visual Studio 2008 SP1. Начиная с версии EF4.1 он поставляется как `пакет EntityFramework NuGet <https://www.nuget.org/packages/EntityFramework/>`_ - В настоящее время самый популярный пакет на NuGet.org.

Поддержка EF6.x продолжается, и будет продолжаться отслеживание багов и выполняться небольшие улучшения.

Что такое EF Core
-----------------

Entity Framework Core (EF Core) это легкая, расширяемая и кросс-платформенная версия Entity Framework. EF Core вводит много улучшений и новых функций по сравнению с EF6.x. В то же время EF Core разрабатывался заново и это очень новый продукт.

EF Core сохранил опыт разработки EF6.x, и большинство высокоуровневых API остались те же самые, так что те люди, кто использовал EF6.x, будут чувствовать себя с EF Core очень комфортно. В то же время EF Core разработан под совершенно новый набор ключевых компонентов. Это означает, что EF Core не наследует автоматически все возможности EF6.x. Некоторые из этих функций появяться в будущих выпусках (например, ленивая загрузка и отказоустойчивость подключения), другие менее часто используемые функции не будут реализованы в EF Core.

Новое, расширяемое и легкое ядро также позволило нам добавить некоторые функции в EF Core, которые не будут реализовываться в EF6.x (например, альтернативные ключи и смешанные валидации "клиент/база данных" в запросах LINQ).

Подробное обзор того, как набор функций в EF Core можно сравнить с EF6.x смотрите раздел :doc:`features`.

Руководство для новых приложений
--------------------------------

Поскольку EF ядро представляет собой новый продукт и до сих пор не хватает некоторых важных функций O/RM, EF6.x по-прежнему будет наиболее подходящим выбором для многих приложений.

Вот типы приложений, для которых мы рекомендуем использовать EF Core.
 * Новые приложения, не требующие возможности, которые еще не реализованы в EF Core. Чтобы увидеть, может ли EF Core быть подходящим выбором для вашего приложения, посмотрте раздел :doc:`features`.
 * Приложения, использующие .NET Core, такие как Universal Windows Platform (UWP) и ASP.NET Core. Эти приложения не могут использовать EF6.x, так как он требует полной версии .NET Framework (например, .NET Framework 4.5).

Руководство для существующих приложений EF6.x
---------------------------------------------

Из-за фундаментальных изменений в EF Core, не рекомендуется пытаться портировать приложение EF6.x на EF Core, если у вас нет веской причины делать такие изменения. Если вы хотите, чтобы перейти на EF Core чтобы использовать новые возможности, то прежде чем начнете сначала убедитесь, что вы знаете о его ограничениях. Чтобы увидеть, может ли EF Core быть подходящим выбором для вашего приложения, посмотрте раздел :doc:`features`.

**Вы должны рассматривать переход от EF6.x на EF Core как портирование, а не как обновление.** Подробнее смотрите в разделе :doc:`porting/index`.
