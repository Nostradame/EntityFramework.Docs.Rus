Связанные данные
================

В дополнение к отдельным сущностям, вы также можете использовать отношения, определенные в вашей модели..

.. contents:: `В этой статье:`
    :depth: 2
    :local:

.. include:: /_shared/sample.txt
.. _пример: https://github.com/aspnet/EntityFramework.Docs/tree/master/samples/Saving/Saving/RelatedData/

Добавление графа новых сущностей
--------------------------------

Если вы создаете несколько новых связанных сущностей, добавление одного из них в контекст, так же вызовет добавление других.

В следующем примере, блог и все три соответствующие заметки добавляются в базу данных. Заметки найдены и добавлены, потому что они доступны через навигационное свойство ``Blog.Posts``.

.. includesamplefile:: Saving/Saving/RelatedData/Sample.cs
        :language: c#
        :lines: 18-33
        :linenos:


Добавление связанной сущности
-----------------------------

Если вы ссылаетесь на новую сущность из навигационного свойства сущности, которая уже отслеживается контекстом, то такая сущность будет обнаружена и добавлена в базу данных.

В следующем примере, сущность ``post`` добавлена в базу, потому что она добавлена в свойство ``Posts`` сущности ``blog``, которые были извлечены из базы данных.

.. includesamplefile:: Saving/Saving/RelatedData/Sample.cs
        :language: c#
        :lines: 36-43
        :linenos:

Изменение отношений
-------------------

Если вы меняете навигационное свойство сущности, то в базе данных в столбце внешнего ключа будут сделаны соответствующие изменения.

В следующем примере, свойство ``post`` было обновлено с целью принадлежать новой сущности ``blog`` потому что ее навгационное свойство ``Blog`` стало ссылаться на ``blog``. Обратите внимание, что ``blog`` также быть вставлен в базу данных, потому что это новая сущность, на которую указывает навигационное свойство сущности (``post``), которая уже отслеживается контекстом.

.. includesamplefile:: Saving/Saving/RelatedData/Sample.cs
        :language: c#
        :lines: 46-53
        :linenos:

Удаление отношений
------------------

Вы можете удалить отношения путем установки навигационной ссылки в  ``null``, или удаления связанной сущности из коллекции навигаций.

Если настроено каскадное удаление, то дочерние/зависимые сущности будут удалены из базы данных, более подробно смотрите :doc:`cascade-delete`. Если каскадное удаление не настроено, то столбец внешнего ключа в базе данных будет установлен в ``null`` (если столбец не принимает значения ``null``, будет выброшено исключение).

В следующем примере настроено каскадное удаление для отношений между ``Blog`` и ``Post``, так что сущность ``post`` удаляется из базы данных.

.. includesamplefile:: Saving/Saving/RelatedData/Sample.cs
        :language: c#
        :lines: 56-63
        :linenos:
