Основы сохранения
======================

Узнайте, как добавлять, изменять и удалять данные с помощью вашего контекста и классов сущностей.

.. contents:: `В этой статье:`
    :depth: 2
    :local:

.. include:: /_shared/sample.txt
.. _пример: https://github.com/aspnet/EntityFramework.Docs/tree/master/samples/Saving/Saving/Basics/

ChangeTracker & SaveChanges
------------------------------------

В каждом экземпляре контекста есть `ChangeTracker`, отвечающий за отслеживание изменений, которые должны быть записаны в базу данных. По мере внесения изменений в экземпляры классов сущностей, эти изменения записываются в `ChangeTracker`, а затем записываются в базу данных при вызове `SaveChanges`.

Добавление данных
--------------------------

Используйте метод `DbSet.Add` для добавления новых экземпляров классов сущностей. Данные будут записаны в базу данных когда вы вызовите `SaveChanges`.

.. includesamplefile:: Saving/Saving/Basics/Sample.cs
        :language: c#
        :lines: 17-24
        :linenos:

Обновление данных
-------------------------

EF автоматически обнаруживает изменения, сделанные в существующих сущностях, которые отслеживаются контекстом. Сюда включаются сущности, которые вы запросили/загрузили в базу данных, и сущности, которые были предварительно добавлены и сохранены в базе данных.

Просто измените значения, назначенные свойству и вызовите `SaveChanges`.

.. includesamplefile:: Saving/Saving/Basics/Sample.cs
        :language: c#
        :lines: 26-31
        :linenos:

Удаление данных
-----------------------

Используйте метод `DbSet.Remove` для удаления экземпляров классов сущностей.

Если сущность уже есть в базе данных, она будет удалена при вызове `SaveChanges`. Если сущность еще не была записана в базу данных (т.е. она отслеживается как добавленная) то она будет удалена из контекста и никогда не будет записана в базу данных при вызове `SaveChanges`.

.. includesamplefile:: Saving/Saving/Basics/Sample.cs
        :language: c#
        :lines: 33-38
        :linenos:

Несколько операций в одном SaveChanges
----------------------------------------------------

Вы можете комбинировать несколько операций добавления/обновления/удаления в одном вызове `SaveChanges`.

.. note::
  Для большинства провайдеров баз данных, `SaveChanges` - это транзакция. Это означает, что все операции или будут выполнены, или провалятся, но никогда операции не будут применяться частично.

.. includesamplefile:: Saving/Saving/Basics/Sample.cs
        :language: c#
        :lines: 48-60
        :linenos:
