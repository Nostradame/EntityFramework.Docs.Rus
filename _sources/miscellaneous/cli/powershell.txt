Консоль Package Manager (Visual Studio)
============================================

EF инструменты командной строки для окна консоли Visual Studio, Package Manager (PMC).

.. contents:: `В этой статье:`
    :depth: 2
    :local:

.. attention::
  Для выполнения команд необходима `последняя версия Windows PowerShell <https://www.microsoft.com/en-us/download/details.aspx?id=50395>`_

Установка
------------------

Команды консоли Package Manager установливаются с пакетом *Microsoft.EntityFrameworkCore.Tools*.

Чтобы открыть консоль, выполните следующие действия.

* Откройте Visual Studio 2015
* :menuselection:`Tools --> Nuget Package Manager --> Package Manager Console`
* Выполните команду ``Install-Package Microsoft.EntityFrameworkCore.Tools -Pre``

.NET Core и проекты ASP.NET Core
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.NET Core и проекты ASP.NET Core так же требуют установленной .NET Core CLI. Для получения дополнительной информации об этой установке смотрите :doc:`dotnet`.

.. note::

  Ядро CLI .NET имеет проблемы в Preview 1. Поскольку PMC команды вызывают команды CLI ядра .NET, эти известные проблемы, также применимы к командам PMC. Смотрите :ref:`dotnet_cli_issues`.

.. tip::

  В проектах .NET Core и ASP.NET Core, добавьте ``-Verbose`` к любой консольной команде Package Manager для просмотра команды .NET Core CLI , эквивалентной вызванной команде.

Применение
----------------

.. note::

  Все команды поддерживают общие параметры: ``-Verbose``, ``-Debug``,
  ``-ErrorAction``, ``-ErrorVariable``, ``-WarningAction``, ``-WarningVariable``,
  ``-OutBuffer``, ``-PipelineVariable``, and ``-OutVariable``. Для получения дополнительной информации смотрите
  `about_CommonParameters <http://go.microsoft.com/fwlink/?LinkID=113216>`_.


Add-Migration
~~~~~~~~~~~~~~~~~
Добавление новой миграции.

.. code-block:: text

  SYNTAX
      Add-Migration [-Name] <String> [-OutputDir <String>] [-Context <String>] [-Project <String>]
       [-StartupProject <String>] [-Environment <String>] [<CommonParameters>]

  PARAMETERS
      -Name <String>
          Задает имя миграции.

      -OutputDir <String>
          Каталог (и подпространство имен) для использования. Если этот параметр опущен, используется "Миграции". Relative paths are relative to project directory.

      -Context <String>
          Задает DbContext для использования. Если этот параметр опущен, используется DbContext по умолчанию.

      -Project <String>
          Указывает проект для использования. Если этот параметр опущен, используется проект по умолчанию.

      -StartupProject <String>
          Указывает используемый проект запуска. Если этот параметр опущен, используется проект запуска решения.

      -Environment <String>
          Задает среду для использования. Если этот параметр опущен, используется "Development".


Remove-Migration
~~~~~~~~~~~~~~~~~
Удаление последней миграции.

.. code-block:: text

  SYNTAX
      Remove-Migration [-Context <String>] [-Project <String>] [-StartupProject <String>] [-Environment <String>]
       [-Force] [<CommonParameters>]

  PARAMETERS
      -Context <String>
          Задает DbContext для использования. Если этот параметр опущен, используется DbContext по умолчанию.

      -Project <String>
          Указывает проект для использования. Если этот параметр опущен, используется проект по умолчанию.

      -StartupProject <String>
          Указывает используемый проект запуска. Если этот параметр опущен, используется проект запуска решения.

      -Environment <String>
          Задает среду для использования. Если этот параметр опущен, используется "Development".

      -Force [<SwitchParameter>]
          Удаляет последнюю миграцию без проверки базы данных. Если последняя миграция была применена к базе данных, вам нужно будет вручную отменить изменения, которые были применены.


Scaffold-DbContext
~~~~~~~~~~~~~~~~~~
Выполнение скаффолдинга DbContext и классов типов сущностей для указанной базы данных

.. code-block:: text

  SYNTAX
      Scaffold-DbContext [-Connection] <String> [-Provider] <String> [-OutputDir <String>] [-Context <String>]
        [-Schemas <String>] [-Tables <String>] [-DataAnnotations] [-Force] [-Project <String>]
        [-StartupProject <String>] [-Environment <String>] [<CommonParameters>]

  PARAMETERS
      -Connection <String>
          Указывает строку подключения базы данных.

      -Provider <String>
          Определяет используемого провайдера. Например Microsoft.EntityFrameworkCore.SqlServer.

      -OutputDir <String>
          Задает каталог, используемый для вывода классов. Если опущен, используется каталог верхнего уровня проекта.

      -Context <String>
          Определяет имя генерируемого класса DbContext.

      -Schemas <String>
          Определяет схему, для которой генерируются классы.

      -Tables <String>
          Определяет таблицы, для которых генерируются классы.

      -DataAnnotations [<SwitchParameter>]
          Использует аттрибуты DataAnnotation для настройки модели, где это возможно. Если опущены, выводимый код будет использовать только Fluent API.

      -Force [<SwitchParameter>]
          Заставляет скаффолдинг перезаписывать существующие файлы. В противном случае, код будет выполняться только при условии, что выводимые файлы не будут перезаписаны.

      -Project <String>
          Указывает проект для использования. Если этот параметр опущен, используется проект по умолчанию.

      -StartupProject <String>
          Указывает используемый проект запуска. Если этот параметр опущен, используется проект запуска решения.

      -Environment <String>
          Задает среду для использования. Если этот параметр опущен, используется "Development".


Script-Migration
~~~~~~~~~~~~~~~~~
Генерирование скрипта SQL из миграции

.. code-block:: text

  SYNTAX
      Script-Migration -From <String> -To <String> [-Idempotent] [-Context <String>] [-Project <String>]
        [-StartupProject <String>] [-Environment <String>] [<CommonParameters>]

      Script-Migration [-From <String>] [-Idempotent] [-Context <String>] [-Project <String>]
        [-StartupProject <String>] [-Environment <String>] [<CommonParameters>]

  PARAMETERS
      -From <String>
          Определяет начальную миграцию. Если опущен, используется '0' (инициирование базы данных).

      -To <String>
          Определяет конечную миграцию. Если опущен, применяется последняя миграция.

      -Idempotent [<SwitchParameter>]
          Формирует идемпотентный скрипт, который можно использовать в базе данных в любой миграции.

      -Context <String>
          Задает DbContext для использования. Если этот параметр опущен, используется DbContext по умолчанию.

      -Project <String>
          Указывает проект для использования. Если этот параметр опущен, используется проект по умолчанию.

      -StartupProject <String>
          Указывает используемый проект запуска. Если этот параметр опущен, используется проект запуска решения.

      -Environment <String>
          Задает среду для использования. Если этот параметр опущен, используется "Development".


Update-Database
~~~~~~~~~~~~~~~~~
Обновление базы данных до указанной миграции.

.. code-block:: text

  SYNTAX
      Update-Database [[-Migration] <String>] [-Context <String>] [-Project <String>] [-StartupProject <String>]
        [-Environment <String>] [<CommonParameters>]

  PARAMETERS
      -Migration <String>
          Определяет цель миграции. Если '0', все миграции будут отменены. Если этот параметр опущен, будут применены все ожидающие миграции.

      -Context <String>
          Задает DbContext для использования. Если этот параметр опущен, используется DbContext по умолчанию.

      -Project <String>
          Указывает проект для использования. Если этот параметр опущен, используется проект по умолчанию.

      -StartupProject <String>
          Указывает используемый проект запуска. Если этот параметр опущен, используется проект запуска решения.

      -Environment <String>
          Задает среду для использования. Если этот параметр опущен, используется "Development".

Use-DbContext
~~~~~~~~~~~~~
Устанавливает DbContext для использования по умолчанию.

.. code-block:: text

  SYNTAX
      Use-DbContext [-Context] <String> [-Project <String>] [-StartupProject <String>] [-Environment <String>]
        [<CommonParameters>]

  PARAMETERS
      -Context <String>
          Задает DbContext для использования.

      -Project <String>
          Указывает проект для использования. Если этот параметр опущен, используется проект по умолчанию.

      -StartupProject <String>
          Указывает используемый проект запуска. Если этот параметр опущен, используется проект запуска решения.

      -Environment <String>
          Задает среду для использования. Если этот параметр опущен, используется "Development".


Совместное использование команд EF Core и EF 6
----------------------------------------------

Команды EF Core не работают на EF 6 или более ранних версиях EF. Однако, EF Core использует некоторые имена команд из этих более ранних версий. Эти команды могут быть установлены совместно, однако, EF не может автоматически определить, какую версию команд использовать. Эта проблема решается добавлением имени модуля как префикса команды. Команды модуля PowerShell каркаса EF называтся "EntityFramework", а команды модуля EF Core называются "EntityFrameworkCore". Без такого префикса PowerShell может вызвать неправильную версию команды.

.. code-block:: PowerShell

  # Вызов команды EF Core 
  PS> EntityFrameworkCore\Add-Migration

  # Вызов команды EF 6
  PS> EntityFramework\Add-Migration


Распространенные ошибки
-----------------------

.. include:: _common_errors.txt

Смотрите так же :ref:`dotnet_cli_issues` для команд .NET Core CLI.
