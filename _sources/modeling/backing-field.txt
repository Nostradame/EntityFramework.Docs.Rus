Резервные поля
=================

Когда резервные поля настроены, то при восстановлении экземпляра сущности из базы данных EF будет записывать данные напрямую в эти поля (раньше чем будут задействованы сеттеры свойств). Это полезно, если у них нет сеттеров свойств, или сеттеры содержат логику, которая не должна выполняться когда устанавливается начальное значение свойства данной сущности при ее загрузке из базы данных.

.. attention::
  ``ChangeTracker`` пока еще не доступен для использования резервных полей когда ему необходимо установить значение свойства. Для свойств внешнего ключа и генерируемых свойств пока еще является проблеммой то, как трекер изменений должен передавать значения этих свойств. Для таких свойств все еще должен использоваться сеттер.

  `Issue #4461 <https://github.com/aspnet/EntityFramework/issues/4461>`_ отслеживает возможность ``ChangeTracker`` заполнять резервные поля без использования сеттера.

.. contents:: В этой статье:
  :depth: 2
  :local:

Соглашения
---------------

По соглашениям, для данных свойств следующие поля будут определены как резервные поля (перечисленны в порядке приоритета):
  * <propertyName> отличаются только регистром
  * _<propertyName>
  * m_<propertyName>

.. includesamplefile:: Modeling/Conventions/Samples/BackingField.cs
        :language: c#
        :lines: 18-29
        :emphasize-lines: 3,7-11
        :linenos:

Аннотации данных
------------------------

Резервные поля не могут быть настроены при помощи аннотации данных.

Fluent API
-------------------

Не существует API верхнего уровня для конфигурирования резервных полей, но вы можете использовать Fluent API для задания аннотаций, которые используются для хранения информации резервного поля.

.. includesamplefile:: Modeling/FluentAPI/Samples/BackingField.cs
        :language: c#
        :lines: 5-23
        :emphasize-lines: 7-9,15,18
        :linenos:
