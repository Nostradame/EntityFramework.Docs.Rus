Клиентская или серверная валидация
==================================

Entity Framework Core поддерживает проверку части запроса на стороне клиента, а часть - при записи в базу данных. Остается на совести провайдера определять, какая часть запроса будет проверена в базе данных.

.. contents:: `В этой статье:`
    :depth: 2
    :local:

.. include:: /_shared/sample.txt
.. _пример: https://github.com/aspnet/EntityFramework.Docs/tree/master/samples/Querying

Проверка на стороне клиента
---------------------------

В следующем примере метод помощника использует для блога стандартизированный URL который возвращается из базы данных SQL Server. Так как провайдер SQL Server не имеет никакого понимания того, как реализован этот метод, не представляется возможным перевести его в SQL. Все остальные аспекты запроса оцениваются в базе данных, но передача возвращаемого этим методом ``URL`` выполнена на стороне клиенте.

.. includesamplefile:: Querying/Querying/ClientEval/Sample.cs
        :language: c#
        :lines: 24-31
        :emphasize-lines: 6
        :dedent: 16
        :linenos:

.. includesamplefile:: Querying/Querying/ClientEval/Sample.cs
        :language: c#
        :lines: 8-18
        :dedent: 8
        :linenos:

Отключение проверки на стороне клиента
--------------------------------------

Несмотря на то, что оценка на стороне клиента может быть очень полезной, в некоторых случаях это может привести к снижению производительности. Рассмотрим следующий запрос, где вспомогательный метод в настоящее время используется в фильтре. Так как это не может быть выполнено в базе данных, то все данные записываются в память, а затем на стороне клиента применяется фильтр. В зависимости от объема данных, а также, сколько из этих данных отфильтровывается, то это может привести к снижению производительности.

.. includesamplefile:: Querying/Querying/ClientEval/Sample.cs
        :language: c#
        :lines: 36-38
        :dedent: 16
        :linenos:

По умолчанию EF Core будет логгировать предупреждение, когда выполняется оценка на стороне клиента. Для получения подробной информации о просмотре информации логгирования смотрите раздел :doc:`/miscellaneous/logging`. Вы можете изменить поведение, когда выполняется оценка на стороне клиента - либо бросить исключение, либо ничего не делать. Это делается при настройке параметров для вашего контекста - обычно в ``DbContext.OnConfiguring``, или в ``Startup.cs`` если вы используете ASP.NET Core.

.. includesamplefile:: Querying/Querying/ClientEval/ThrowOnClientEval/BloggingContext.cs
        :language: c#
        :lines: 11-16
        :emphasize-lines: 5
        :dedent: 8
        :linenos:
