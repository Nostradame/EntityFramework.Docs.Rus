Как работают запросы
====================

Для запросов данных из базы данных Entity Framework Core использует Language Integrate Query (LINQ). LINQ позволяет использовать C# (или другой .NET язык) для записи строго типизирванных запросов, основываясь на вашем прозводном контексте и классах сущности.

.. contents:: `В этой статье:`
    :depth: 2
    :local:

Жизненный цикл запроса
----------------------

Ниже приведен высокоуровневый обзор процесса, который проходит каждый запрос.

1. LINQ-запрос обрабатывается ядром Entity Framework для создания представления, готового к обработке провайдером базы данных

  a. Результат кэшируется, так что эту обработку не нужно делать каждый раз, когда выполняется запрос

2. Результат передается провайдеру базы данных

  a. Провайдер базы данных определяет, какие части запроса могут быть проверены в базе данных
  b. Эти части запроса будут переведены на язык конкретных запросов базы данных (например SQL для реляционных баз данных)
  c. Один или несколько запросов, отправляются в базу данных и возращается результирующий набор (эти результаты являются значениями из базы данных, а не экземплярами сущностей)

3. Для каждого элемента в результирующем наборе

  a. Если это трекинг-запрос, EF проверяет экземпляр контекста: данные, представляющие сущность уже есть в треккере изменений или нет

    * Если есть, возвращается существующая сущность
    * Если нет, то создается новая сущность, настраивается треккер изменений, и  новая сущностьвозвращается

  b. Если это не трекинг-запрос, EF проверяет, данные, представляющие сущность, уже есть в результирующем наборе этого запроса или нет

    * Если есть, возвращается существующая сущность
    * Если нет, создается и возвращается новая сущность

Во время выполнения запроса
---------------------------

Когда вы выполняете LINQ операторы, то вы просто создаете представление запроса в памяти. Запрос отправляется в базу данных, только когда результаты востребуются.

Наиболее распространенные операции, которые приводят к отправке запроса в базу данных являются:
 * Итерации результатов в цикле ``for``
 * Использование таких операторов как ``ToList``, ``ToArray``, ``Single``, ``Count``
 * Привязка данных результаты запроса к пользовательскому интерфейсу
